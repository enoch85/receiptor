services:
  postgres:
    image: supabase/postgres:15.1.0.147
    container_name: receiptor-db
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10
    networks:
      - receiptor

  web:
    build:
      context: ..
      dockerfile: docker/web/Dockerfile.dev
    container_name: receiptor-web-app
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_SUPABASE_URL=http://localhost:8000
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
    ports:
      - "3000:3000"
    volumes:
      - ../web:/app/web:cached
      - ../shared:/app/shared:cached
      - web-node-modules:/app/web/node_modules
    working_dir: /app/web
    command: npm run dev
    networks:
      - receiptor

volumes:
  postgres-data:
    name: receiptor-postgres-data
  web-node-modules:
    name: receiptor-web-node-modules

networks:
  receiptor:
    name: receiptor-network
    driver: bridge
